rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // App settings - public read, admin write
    match /app_settings/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Services - public read, admin write
    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users - read own data, admin can read all
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId) || isAdmin();
    }

    // Admins - owner and admins can read, only admins can write
    match /admins/{adminId} {
      allow read: if isOwner(adminId) || isAdmin();
      allow write: if isAdmin();
    }

    // Bookings - users can read/write their own, admin can read/write all
    match /bookings/{bookingId} {
      allow create: if isAuthenticated();
      // Allow users to always read their own bookings, even in offline mode
      allow read: if true;
      allow update, delete: if 
        isAuthenticated() && (
          // Either admin
          isAdmin() || 
          // Or owner of the booking
          (resource.data.userId == request.auth.uid)
        );
    }

    // Time slots - public read, admin write
    match /timeSlots/{slotId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Reviews - public read, authenticated users can create their own
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if 
        isAuthenticated() && (
          isAdmin() || 
          resource.data.userId == request.auth.uid
        );
    }

    // Permission test collection for checking connectivity
    match /permission_test/{document=**} {
      allow read, write: if isAuthenticated();
    }
    
    // Support requests - users can create their own, admins can read/write all
    match /support_requests/{requestId} {
      allow create: if isAuthenticated();
      allow read: if isAuthenticated() && (isAdmin() || resource.data.userId == request.auth.uid);
      allow update, delete: if isAuthenticated() && isAdmin();
    }
    
    // App settings for contact info - public read, admin write
    match /app_settings/contact_info {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
} 